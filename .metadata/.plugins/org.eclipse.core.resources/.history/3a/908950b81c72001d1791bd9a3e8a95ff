package controller;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import common.Command;
import customer.command.KakaoLogin;
import member.command.MemberLogin;
import member.command.MemberLogout;
import member.command.NaverCallback;
import member.command.NaverLogin;

@WebServlet("*.mb")
public class MemberController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.getSession().removeAttribute("category");;
		request.setAttribute("naver_id", "wZUymu57EVmvNaCsnStJ");
		request.setAttribute("naver_secret", "bP0jg4vg0O");
		request.setAttribute("kakao_id", "9f191801322c3607f4aca26a1ee0d5b9");
		
		String uri = request.getServletPath();
		String view = "";
		boolean redirect = false;
		Command cmd = null;
		
		if(uri.equals("/login.mb")) {
			//로그인 페이지로 이동
			view = "member/login.jsp";
		}else if(uri.equals("/smartLogin.mb")) {
			//로그인 처리
			cmd = new MemberLogin();
			cmd.exec(request, response);
			return; //화면연결 응답 x (redirect,forward 걸리지 않게)
		}else if(uri.equals("/logout.mb")) {
			//로그아웃 처리
			cmd = new MemberLogout();
			cmd.exec(request, response);
			view = (String)request.getAttribute("url");
			redirect = true;
		}else if(uri.equals("/naverlogin.mb")) {
			//네이버 로그인
			cmd = new NaverLogin();
			cmd.exec(request, response);
			
			view = (String)request.getAttribute("url");
			redirect = true;
		}else if(uri.equals("/navercallback.mb")) {
			//네이버 콜백처리
			cmd = new NaverCallback();
			cmd.exec(request, response);
			
			view = request.getContextPath();
			redirect = true;
		}else if(uri.equals("/kakaologin.mb")) {
			//카카오 로그인
			cmd = new KakaoLogin();
			cmd.exec(request, response);
			
			view = (String)request.getAttribute("url");
			redirect = true;
			
		}else if(uri.equals("/kakaocallback.mb")) {
			//카카오 콜백처리
			
			view = request.getContextPath();
			redirect = true;
		}
		
		if(redirect) response.sendRedirect(view);
		else request.getRequestDispatcher(view).forward(request, response);
		
	}

}
